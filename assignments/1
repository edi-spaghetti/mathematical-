Problem Set 1
=============

 - ∀ for every
 - ∨ or
 - ∧ and
 - ⊼ nand
 - ⇒ implication
 - ⇔ if and only if
 - ¬ not
 - {R} real numbers (all integers, plus all rational and irrational)
 - {Z} positive and negative integers {..., -2, -1, 0, 1, 2, ...}
 - {Z+} positive integers only {1, 2, 3, ...}
 - {Z≠0} non zero integer
 - {Q} rational numbers (sum of two integers)
 - ■ end of proof


## Problem 1

Using the following definitions, convert English sentences into predicate logic.


	X is the set of people	
	S(x) ::= x has been a student of 6.042
	A(x) ::= x got an A on 6.042
	T(x) ::= x is a TA on 6.042
	E(x,y) ::= x and y are the same person

a) There are people who have taken 6.042 and have gotten A’s in 6.042

	∃x ∈ X. S(x) ∧ A(x)

b) All people who are 6.042 TA’s and have taken 6.042 got A’s in 6.042

	∃x ∈ X. T(x) ∧ S(x) ⇒ A(x)

c) There are no people who are 6.042 TA’s who did not get A’s in 6.042

	∀x ∈ X. ¬A(x) ⇒ ¬T(x)

d) There are at least three people who are TA’s in 6.042 and have not taken 6.042

	∃x,y,z ∈ X. ¬E(x,y) ∧ ¬E(x,z) ∧ ¬E(y,z) ∧ (T(x) ∧  ¬S(x)) ∧ (T(y) ∧  ¬S(y)) ∧ (T(z) ∧  ¬S(z))


## Problem 2

Use a truth table to prove or disprove the following statements:

a) ¬(P ∨ (Q ∧ R)) = (¬P) ∧ (¬Q ∨ ¬R)

| P | Q | R |  ¬(P ∨ (Q ∧ R)) | (¬P) ∧ (¬Q ∨ ¬R) |
| F | F | F |        T        |          T        |
| F | F | T |        T        |          T        |
| F | T | F |        T        |          T        |
| F | T | T |        F        |          F        |
| T | F | F |        F        |          F        |
| T | F | T |        F        |          F        |
| T | T | F |        F        |          F        |
| T | T | T |        F        |          F        |

They're all the same, so they are equal. For fun I ran this in python to verify.

```python
from itertools import product
X = product([True, False], repeat=3)
result = 'Proved'
for P, Q, R in X:
	if not (P or (Q and R)) != (not P) and (not Q or not R):
		print((P, Q, R))
		result = 'Disproved'
print(result)
# >>> Proved
```

b) ¬(P ∧ (Q ∨ R)) = ¬P ∨ (¬Q ∨ ¬R)

| P | Q | R |  ¬(P ∧ (Q ∨ R)) | ¬P ∨ (¬Q ∨ ¬R) |
| F | F | F |        T        |        T        |
| F | F | T |        T        |        T        |
| F | T | F |        T        |        T        |
| F | T | T |        T        |        T        |
| T | F | F |        T        |        T        |
| T | F | T |        F        |        T        |
| T | T | F |        F        |        T        |
| T | T | T |        F        |        F        |

Two discrepancies at TFT and TTF. I ran in through python again, to check my answers.

```python
from itertools import product
X = product([True, False], repeat=3)
result = 'Proved'
for P, Q, R in X:
	if not (P and (Q or R)) != (not P or (not Q or not R)):
		print((P, Q, R))
		result = 'Disproved'
print(result)
# >>> (True, True, False)
# >>> (True, False, True)
# >>> Disproved
```


## Problem 3

a) Find equivalent expressions using only ⊼ (nand) and ¬ (not)

i) A ∧ B

	¬(A ⊼ B)

ii) A ∨ B

	(¬A) ⊼ (¬B)

iii) A ⇒ B

	¬A ⊼ (¬B)

b) Find an equivalent expression for (¬A) using only nand and grouping parentheses

	(A ⊼ A)

c) The constants true and false themselves may be expressed using only nand.

i) Construct an expression using an arbitrary statement A and nand that evaluates to true regardless of whether A is true or false

	(A ⊼ A) ⊼ A

ii) Construct a second expression that always evaluates to false

	((A ⊼ A) ⊼ A) ⊼ ((A ⊼ A) ⊼ A)


## Problem 4

12 coins and a balance scale, one coin is fake.
All real coins weigh the same, but the fake coin weighs less than the rest. 
In at most 3 weighings, give a strategy that detects the fake coin.

	Reliable Strategy:
	(guranteed to find fake in exactly 3 weighings)

	First, 6 on each side of the scale, discard the heavier side
	Second, 3 on each side of scale, discard the heavier side
	Third, 1 on each side, 
	    if balanced, the third coin is fake
	    else the lighter side is the fake


	High Risk - High Reward Strategy:
	(could find fake on first try, might not find it at all)
	
	Randomly pick two coins and place on each side of scale.
		if unbalanced, the lighter side is the fake
		else discard both coins
		repeat until fake is found or 3 weighings


	Best Stategy
	(could find fake in 2 weighings, definitely in 3)

	First, 4 on each side, with 4 remainder
		if balanced, discard both, as fake is in remainder
		else discard heavier side and remainder
	Second, 1 on each side, 2 remainder
		if unbalanced, the lighter side is the fake
		else discard both
	Third, (if necessary) 1 on each side
		the lighter side is the fake

## Problem 5

Prove the following statement by proving its contrapositive: 
if r is irrational, then r¹⸍⁵ is irrational.

	P(r) ::= r is irrational
	Q(r) ::= r¹⸍⁵ is irrational
	Theorem: ∀r ∈ {R}. P(r) ⇒ Q(r)
	Proof: We prove by contrapositive if r¹⸍⁵ is rational, then r is rational.
	       Assuming r¹⸍⁵ is rational, we can assume the following

lemma 1: [rational numbers are equal to a ratio of two integers](https://proofwiki.org/wiki/Definition:Rational_Number)

			∀c ∈ {Q}. ∃a ∈ {Z}. ∃b ∈ {Z≠0}. c = a / b

		   r¹⸍⁵ = a / b
		   r   = ⁵√(a/b)

lemma 2: [nth root of non-integers are irrational](https://proofwiki.org/wiki/Nth_Root_of_Integer_is_Integer_or_Irrational)
		   
		   if r is rational, then a / b must be an integer.
		   from lemma 1, a and b are coprime with gcd(a, b) = 1
		   meaning for a / b to be an integer b must equal 1.

		   r = a⁵ / b⁵

		   if b = 1 then b⁵ = 1

		   r = a⁵

		   Since a is an integer, and integers are closed under multiplication,
		   it follows that r is also an integer, i.e. rational.
		   ■
